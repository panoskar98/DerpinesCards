openapi: 3.1.0
info:
  title: Derpines Cards
  description: Derpines Cards e-shop
  version: 0.2.3
  contact:
    name: Derpines Cards

servers:
  - url: http://localhost:4000
tags:
  - name: products
  - name: customers
  - name: orders






paths:
  /products:
    get:
      tags:
        - products
      summary: Get all products
      description: Get a list of every product
      operationId: getProducts
      responses:
        '200':
          description: Successfully returned all the products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllProducts'
    post:
      tags:
        - products
      summary: Add a product
      description: Adds a new product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProduct'
      responses:
        '201':
          description: Successfully created a new Product
        '401':
          description: Could not Create a new product
  /products/{id}:
    delete:
      tags:
        - products
      summary: Delete a product
      description: Delete an existing product
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: The ID of the product to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified product
        '404':
          description: No product with that ID found
    put:
      tags:
        - products
      summary: Update a product
      description: Update an existing product.
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: The ID of the product to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProduct'
      responses:
        '201':
          description: Successfully updated the specified product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '400':
          description: Could not create a new product, please check all fields are correct
        '404':
          description: No customer with that ID found

  /customers:
    get:
      tags:
        - customers
      summary: Get all customers
      description: Get a list of every customer
      operationId: getCustomers
      responses:
        '200':
          description: Successfully returned all the customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllCustomers'
    post:
      tags:
        - customers
      summary: Add a customer
      description: Adds a new customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomer'
      responses:
        '201':
          description: Successfully created a new Customer
        '401':
          description: Could not Create a new Customer

  /orders:
    get:
      tags:
        - orders
      summary: Get all orders
      description: Get a list of every order
      operationId: getOrders
      responses:
        '200':
          description: Successfully returned all the orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllOrders'
  /orders/{id}:
    get:
      tags:
        - orders
      summary: get an order
      description: get order using order id
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: The ID of the order to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned the order
        '404':
          description: No order with that ID found
    delete:
      tags:
        - orders
      summary: delete an order
      description: delete an order using id
      operationId: deletOrderById
      parameters:
        - name: id
          in: path
          description: Te Id of th order to delete
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned the order
        '404':
          description: No order with that ID found


  /orders/customer/{customerId}:
    post:
      tags:
        - orders
      summary: Add an order
      description: Add order using order id
      operationId: addOrder
      parameters:
        - name: customerId
          in: path
          description: The ID of the order to return
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrder'
      responses:
        '201':
          description: Successfully created a new Product
        '401':
          description: Could not Create a new product
        '404':
          description: Customer Not Found









components:
  schemas:
    product:
      type: object
      properties:
        productId:
          type: integer
          example: 1
        title:
          type: string
          example: "DemoCard"
        description:
          type: string
          example: "This is a demo Card"
        type:
          type: string
          example: "card"
        weight:
          type: integer
          example: 250
        colour:
          type: string
          example: "blue"
        price:
          type: number
          format: double
          example: 2.5
        img:
          type: string
          example: "image url"
        dateAdded:
          type: string
          example: "2023-10-20T13:47:57.695269"

    customer:
      type: object
      properties:
        customerId:
          type: integer
          example: 1
        name:
          type: string
          example: "customerName"
        surname:
          type: string
          example: "customerSurname"
        address:
          type: string
          example: "Street, number PostalCode"
        email:
          type: string
          example: "customer@email.com"
        phoneNumber:
          type: string
          example: "692342343"
        comments:
          type: string
          example: "This is a comment"
        customerOrders:
          type: array
          items:
            $ref: "#/components/schemas/order"
    order:
      type: object
      properties:
        orderId:
          type: integer
          example: 1
        orderdate:
          type: string
          example: "2023-10-18T10:00:00"
        completed:
          type: boolean
          example: false
        ordersProducts:
          type: array
          items:
            $ref: "#/components/schemas/product"
    AllCustomers:
      type: array
      items:
        $ref: '#/components/schemas/customer'
    AllProducts:
      type: array
      items:
        $ref: '#/components/schemas/product'
    AllOrders:
      type: array
      items:
        $ref: '#/components/schemas/order'
    AddProduct:
      type: object
      required: [title, description, modular, img]
      properties:
        title:
          type: string
          example: "DemoCard"
        description:
          type: string
          example: "This is a demo Card"
        type:
          type: string
          example: "card"
        weight:
          type: integer
          example: 250
        colour:
          type: string
          example: "blue"
        price:
          type: number
          format: double
          example: 2.5
        img:
          type: string
          example: "image url"
    AddCustomer:
      type: object
      properties:
        name:
          type: string
          example: "customerName"
        surname:
          type: string
          example: "customerSurname"
        address:
          type: string
          example: "Street, number PostalCode"
        email:
          type: string
          example: "customer@email.com"
        phoneNumber:
          type: string
          example: "692342343"
        comments:
          type: string
          example: "This is a comment"
    AddOrder:
      type: array
      example: [1,2]

